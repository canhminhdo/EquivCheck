load cpx.maude

fmod DIRAC is
    sorts Ket Bra .

    ops |0> |1> : -> Ket [ctor] .
    ops <0| <1| : -> Bra [ctor] .
endfm

fmod MATRIX is
    pr CPX .
    pr DIRAC .
    sorts Matrix .
    subsorts Ket Bra < Matrix .

    --- zero matrix
    op O : -> Matrix [ctor] .
    --- identity matrix
    op I : -> Matrix [ctor] .
    --- fake matrix
    op nil : -> Matrix [ctor] .
    --- error matrix
    op errM : -> Matrix [ctor] .
    --- scalar multiplication with matrix
    op _._ : Cpx Matrix -> Matrix [prec 31] .
    --- matrix product
    op _x_ : Matrix Matrix -> Matrix [assoc prec 31] .
    --- matrix addition
    op _+_ : Matrix Matrix -> Matrix [comm assoc prec 33] .
    --- tensor product
    op _(x)_ : Matrix Matrix -> Matrix [assoc prec 31] .
    --- dagger
    op (_)^+ : Matrix -> Matrix [prec 30] .

    vars M M1 M2 M3 M4 : Matrix .
    vars S S1 S2 : Cpx .

    --- zero matrix properties
    eq 0 . M = O .
    eq S . O = O .
    eq 1 . M = M .

    eq O + M = M .
    eq M + O = M .

    eq O x M = O .
    eq M x O = O .

    eq M (x) O = O .
    eq O (x) M = O .

    --- nil matrix
    eq nil (x) M = M .
    eq M (x) nil = M .
    eq M + nil = M .
    eq S . nil = nil .

    --- identity matrix properties
    eq I x M = M .
    eq M x I = M .
    eq <0| x |0> = I .
    eq <1| x |1> = I .
    eq <0| x |1> = O .
    eq <1| x |0> = O .

    --- dagger properties
    eq (I)^+ = I .
    eq (O)^+ = O .
    eq (|0>)^+ = <0| .
    eq (|1>)^+ = <1| .
    eq (<0|)^+ = |0> .
    eq (<1|)^+ = |1> .
    eq (S . M)^+ = ((S)^*) . (M)^+ .
    eq (M1 x M2)^+ = (M2)^+ x (M1)^+ .
    eq (M1 + M2)^+ = (M1)^+ + (M2)^+ .
    eq (M1 (x) M2)^+ = (M1)^+ (x) (M2)^+ .
    eq ((M)^+)^+ = M .

    --- ditributive properties
    eq M1 x (M2 + M3) = M1 x M2 + M1 x M3 .
    eq (M1 + M2) x M3 = M1 x M3 + M2 x M3 .

    --- additive normal forms
    eq S . (M1 + M2) = S . M1 + S . M2 .
    eq (S1 . M) + (S2 . M) = (S1 .+ S2) . M .
    --- multiplicative normal forms
    eq (S1 . M1) x (S2 . M2) = (S1 .* S2) . (M1 x M2) .
    eq (S . M1) x M2 = S . (M1 x M2) .
    eq M1 x (S . M2) = S . (M1 x M2) .
    --- scalar normal forms
    eq S1 . (S2 . M) = (S1 .* S2) . M .
    --- tensor product normal forms
    --- eq (S1 . M1) (x) (S2 . M2) = (S1 .* S2) . (M1 (x) M2) . --- may ignore
    eq (S . M1) (x) M2 = S . (M1 (x) M2) .
    eq M1 (x) (S . M2) = S . (M1 (x) M2) .

    --- tensor product properties
    eq (M1 (x) M2) x (M3 (x) M4) = (M1 x M3) (x) (M2 x M4) .
    eq M1 (x) (M2 + M3) = M1 (x) M2 + M1 (x) M3 .
    eq (M1 + M2) (x) M3 = M1 (x) M3 + M2 (x) M3 .

    --- basic matrices
    ops B0 B1 B2 B3 P0 P1 : -> Matrix .
    eq B0 = |0> x <0| .
    eq B1 = |0> x <1| .
    eq B2 = |1> x <0| .
    eq B3 = |1> x <1| .
    eq P0 = B0 .
    eq P1 = B3 .

    --- basic gates
    ops X Y Z H S T CX CY CZ SWAP CCX CCZ CSWAP : -> Matrix .
    eq X = B1 + B2 .
    eq Y = ((-1) .* (1 i)) . B1 + (1 i) . B2 .
    eq Z = B0  + (-1) . B3 .
    eq H = 1 ./ sqrt(2) . B0 + 1 ./ sqrt(2) . B1 + 1 ./ sqrt(2) . B2 + (-1) ./ sqrt(2) . B3 .
    eq S = B0 + (1 i) . B3 .
    eq T = B0 + ((1 + (1 i)) ./ sqrt(2)) . B3 .
    eq CX = B0 (x) I + B3 (x) X .
    eq CY = B0 (x) I + B3 (x) Y .
    eq CZ = B0 (x) I + B3 (x) Z .
    --- SWAP(N1, N2) = CX(N1, N2) x CX(N2, N1) x CX(N1, N2)
    eq SWAP = (B0 (x) I + B3 (x) X) x (I (x) B0 + X (x) B3) x (B0 (x) I + B3 (x) X) .
    --- CCX = B0(x)I(x)I + B3(x)B0(x)I + B3(x)B3(x)B1 + B3(x)B3(x)B2
    eq CCX = B0 (x) I (x) I + B3 (x) CX . 
    --- CCZ = B0(x)I(x)I + B3(x)B0(x)I + B3(x)B3(x)B0 + (-1) . B3(x)B3(x)B3
    eq CCZ = B0 (x) I (x) I + B3 (x) CZ . 
    --- CSWAP = B0(x)I(x)I + B3(x)B0(x)B0 + B3(x)B1(x)B2 + B3(x)B2(x)B1 + B3(x)B3(x)B3
    eq CSWAP = B0 (x) I (x) I + B3 (x) SWAP .
endfm